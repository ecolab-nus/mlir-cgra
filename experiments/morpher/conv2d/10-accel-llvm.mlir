module attributes {llvm.data_layout = "", llvm.target_triple = "i386-unknown-linux-gnu", soda.bambu.container_module, soda.container_module} {
  llvm.func @generic_0(%arg0: !llvm.ptr<f32>, %arg1: !llvm.ptr<f32>, %arg2: !llvm.ptr<f32>) attributes {__morpher_kernel__} {
    %0 = llvm.mlir.undef : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)>
    %1 = llvm.insertvalue %arg0, %0[0] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %2 = llvm.insertvalue %arg0, %1[1] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %3 = llvm.mlir.constant(0 : index) : i64
    %4 = llvm.insertvalue %3, %2[2] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %5 = llvm.mlir.constant(1 : index) : i64
    %6 = llvm.insertvalue %5, %4[3, 0] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %7 = llvm.mlir.constant(16 : index) : i64
    %8 = llvm.insertvalue %7, %6[4, 0] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %9 = llvm.mlir.constant(4 : index) : i64
    %10 = llvm.insertvalue %9, %8[3, 1] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %11 = llvm.mlir.constant(4 : index) : i64
    %12 = llvm.insertvalue %11, %10[4, 1] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %13 = llvm.mlir.constant(4 : index) : i64
    %14 = llvm.insertvalue %13, %12[3, 2] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %15 = llvm.mlir.constant(1 : index) : i64
    %16 = llvm.insertvalue %15, %14[4, 2] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %17 = llvm.mlir.constant(1 : index) : i64
    %18 = llvm.insertvalue %17, %16[3, 3] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %19 = llvm.mlir.constant(1 : index) : i64
    %20 = llvm.insertvalue %19, %18[4, 3] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %21 = llvm.mlir.undef : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)>
    %22 = llvm.insertvalue %arg1, %21[0] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %23 = llvm.insertvalue %arg1, %22[1] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %24 = llvm.mlir.constant(0 : index) : i64
    %25 = llvm.insertvalue %24, %23[2] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %26 = llvm.mlir.constant(8 : index) : i64
    %27 = llvm.insertvalue %26, %25[3, 0] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %28 = llvm.mlir.constant(9 : index) : i64
    %29 = llvm.insertvalue %28, %27[4, 0] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %30 = llvm.mlir.constant(3 : index) : i64
    %31 = llvm.insertvalue %30, %29[3, 1] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %32 = llvm.mlir.constant(3 : index) : i64
    %33 = llvm.insertvalue %32, %31[4, 1] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %34 = llvm.mlir.constant(3 : index) : i64
    %35 = llvm.insertvalue %34, %33[3, 2] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %36 = llvm.mlir.constant(1 : index) : i64
    %37 = llvm.insertvalue %36, %35[4, 2] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %38 = llvm.mlir.constant(1 : index) : i64
    %39 = llvm.insertvalue %38, %37[3, 3] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %40 = llvm.mlir.constant(1 : index) : i64
    %41 = llvm.insertvalue %40, %39[4, 3] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %42 = llvm.mlir.undef : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)>
    %43 = llvm.insertvalue %arg2, %42[0] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %44 = llvm.insertvalue %arg2, %43[1] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %45 = llvm.mlir.constant(0 : index) : i64
    %46 = llvm.insertvalue %45, %44[2] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %47 = llvm.mlir.constant(1 : index) : i64
    %48 = llvm.insertvalue %47, %46[3, 0] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %49 = llvm.mlir.constant(32 : index) : i64
    %50 = llvm.insertvalue %49, %48[4, 0] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %51 = llvm.mlir.constant(2 : index) : i64
    %52 = llvm.insertvalue %51, %50[3, 1] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %53 = llvm.mlir.constant(16 : index) : i64
    %54 = llvm.insertvalue %53, %52[4, 1] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %55 = llvm.mlir.constant(2 : index) : i64
    %56 = llvm.insertvalue %55, %54[3, 2] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %57 = llvm.mlir.constant(8 : index) : i64
    %58 = llvm.insertvalue %57, %56[4, 2] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %59 = llvm.mlir.constant(8 : index) : i64
    %60 = llvm.insertvalue %59, %58[3, 3] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %61 = llvm.mlir.constant(1 : index) : i64
    %62 = llvm.insertvalue %61, %60[4, 3] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %63 = llvm.mlir.constant(288 : index) : i64
    %64 = llvm.mlir.constant(3 : index) : i64
    %65 = llvm.mlir.constant(8 : index) : i64
    %66 = llvm.mlir.constant(2 : index) : i64
    %67 = llvm.mlir.constant(0 : index) : i64
    %68 = llvm.mlir.constant(1 : index) : i64
    llvm.br ^bb1(%67 : i64)
  ^bb1(%69: i64):  // 2 preds: ^bb0, ^bb2
    %70 = llvm.icmp "slt" %69, %63 : i64
    llvm.cond_br %70, ^bb2, ^bb3
  ^bb2:  // pred: ^bb1
    llvm.call @please_map_me() : () -> ()
    %71 = llvm.mlir.constant(1 : index) : i64
    %72 = llvm.mlir.constant(0 : index) : i64
    %73 = llvm.mlir.constant(-1 : index) : i64
    %74 = llvm.mlir.constant(false) : i1
    %75 = llvm.select %74, %71, %73 : i1, i64
    %76 = llvm.sub %75, %69  : i64
    %77 = llvm.sdiv %76, %64  : i64
    %78 = llvm.sub %73, %77  : i64
    %79 = llvm.sdiv %69, %64  : i64
    %80 = llvm.icmp "slt" %69, %72 : i64
    %81 = llvm.icmp "sgt" %69, %72 : i64
    %82 = llvm.mlir.constant(false) : i1
    %83 = llvm.mlir.constant(true) : i1
    %84 = llvm.and %80, %83  : i1
    %85 = llvm.and %81, %82  : i1
    %86 = llvm.or %84, %85  : i1
    %87 = llvm.select %86, %78, %79 : i1, i64
    %88 = llvm.mul %87, %64  : i64
    %89 = llvm.sub %69, %88  : i64
    %90 = llvm.sdiv %69, %64  : i64
    %91 = llvm.mlir.constant(1 : index) : i64
    %92 = llvm.mlir.constant(0 : index) : i64
    %93 = llvm.mlir.constant(-1 : index) : i64
    %94 = llvm.mlir.constant(false) : i1
    %95 = llvm.select %94, %91, %93 : i1, i64
    %96 = llvm.sub %95, %90  : i64
    %97 = llvm.sdiv %96, %64  : i64
    %98 = llvm.sub %93, %97  : i64
    %99 = llvm.sdiv %90, %64  : i64
    %100 = llvm.icmp "slt" %90, %92 : i64
    %101 = llvm.icmp "sgt" %90, %92 : i64
    %102 = llvm.mlir.constant(false) : i1
    %103 = llvm.mlir.constant(true) : i1
    %104 = llvm.and %100, %103  : i1
    %105 = llvm.and %101, %102  : i1
    %106 = llvm.or %104, %105  : i1
    %107 = llvm.select %106, %98, %99 : i1, i64
    %108 = llvm.mul %107, %64  : i64
    %109 = llvm.sub %90, %108  : i64
    %110 = llvm.sdiv %90, %64  : i64
    %111 = llvm.mlir.constant(1 : index) : i64
    %112 = llvm.mlir.constant(0 : index) : i64
    %113 = llvm.mlir.constant(-1 : index) : i64
    %114 = llvm.mlir.constant(false) : i1
    %115 = llvm.select %114, %111, %113 : i1, i64
    %116 = llvm.sub %115, %110  : i64
    %117 = llvm.sdiv %116, %65  : i64
    %118 = llvm.sub %113, %117  : i64
    %119 = llvm.sdiv %110, %65  : i64
    %120 = llvm.icmp "slt" %110, %112 : i64
    %121 = llvm.icmp "sgt" %110, %112 : i64
    %122 = llvm.mlir.constant(false) : i1
    %123 = llvm.mlir.constant(true) : i1
    %124 = llvm.and %120, %123  : i1
    %125 = llvm.and %121, %122  : i1
    %126 = llvm.or %124, %125  : i1
    %127 = llvm.select %126, %118, %119 : i1, i64
    %128 = llvm.mul %127, %65  : i64
    %129 = llvm.sub %110, %128  : i64
    %130 = llvm.sdiv %110, %65  : i64
    %131 = llvm.mlir.constant(1 : index) : i64
    %132 = llvm.mlir.constant(0 : index) : i64
    %133 = llvm.mlir.constant(-1 : index) : i64
    %134 = llvm.mlir.constant(false) : i1
    %135 = llvm.select %134, %131, %133 : i1, i64
    %136 = llvm.sub %135, %130  : i64
    %137 = llvm.sdiv %136, %66  : i64
    %138 = llvm.sub %133, %137  : i64
    %139 = llvm.sdiv %130, %66  : i64
    %140 = llvm.icmp "slt" %130, %132 : i64
    %141 = llvm.icmp "sgt" %130, %132 : i64
    %142 = llvm.mlir.constant(false) : i1
    %143 = llvm.mlir.constant(true) : i1
    %144 = llvm.and %140, %143  : i1
    %145 = llvm.and %141, %142  : i1
    %146 = llvm.or %144, %145  : i1
    %147 = llvm.select %146, %138, %139 : i1, i64
    %148 = llvm.mul %147, %66  : i64
    %149 = llvm.sub %130, %148  : i64
    %150 = llvm.sdiv %130, %66  : i64
    %151 = llvm.add %150, %109  : i64
    %152 = llvm.add %149, %89  : i64
    %153 = llvm.extractvalue %20[1] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %154 = llvm.mlir.constant(16 : index) : i64
    %155 = llvm.mul %67, %154  : i64
    %156 = llvm.mlir.constant(4 : index) : i64
    %157 = llvm.mul %151, %156  : i64
    %158 = llvm.add %155, %157  : i64
    %159 = llvm.add %158, %152  : i64
    %160 = llvm.add %159, %67  : i64
    %161 = llvm.getelementptr %153[%160] : (!llvm.ptr<f32>, i64) -> !llvm.ptr<f32>
    %162 = llvm.load %161 : !llvm.ptr<f32>
    %163 = llvm.extractvalue %41[1] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %164 = llvm.mlir.constant(9 : index) : i64
    %165 = llvm.mul %129, %164  : i64
    %166 = llvm.mlir.constant(3 : index) : i64
    %167 = llvm.mul %109, %166  : i64
    %168 = llvm.add %165, %167  : i64
    %169 = llvm.add %168, %89  : i64
    %170 = llvm.add %169, %67  : i64
    %171 = llvm.getelementptr %163[%170] : (!llvm.ptr<f32>, i64) -> !llvm.ptr<f32>
    %172 = llvm.load %171 : !llvm.ptr<f32>
    %173 = llvm.extractvalue %62[1] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %174 = llvm.mlir.constant(32 : index) : i64
    %175 = llvm.mul %67, %174  : i64
    %176 = llvm.mlir.constant(16 : index) : i64
    %177 = llvm.mul %150, %176  : i64
    %178 = llvm.add %175, %177  : i64
    %179 = llvm.mlir.constant(8 : index) : i64
    %180 = llvm.mul %149, %179  : i64
    %181 = llvm.add %178, %180  : i64
    %182 = llvm.add %181, %129  : i64
    %183 = llvm.getelementptr %173[%182] : (!llvm.ptr<f32>, i64) -> !llvm.ptr<f32>
    %184 = llvm.load %183 : !llvm.ptr<f32>
    %185 = llvm.fmul %162, %172  : f32
    %186 = llvm.fadd %184, %185  : f32
    %187 = llvm.extractvalue %62[1] : !llvm.struct<(ptr<f32>, ptr<f32>, i64, array<4 x i64>, array<4 x i64>)> 
    %188 = llvm.mlir.constant(32 : index) : i64
    %189 = llvm.mul %67, %188  : i64
    %190 = llvm.mlir.constant(16 : index) : i64
    %191 = llvm.mul %150, %190  : i64
    %192 = llvm.add %189, %191  : i64
    %193 = llvm.mlir.constant(8 : index) : i64
    %194 = llvm.mul %149, %193  : i64
    %195 = llvm.add %192, %194  : i64
    %196 = llvm.add %195, %129  : i64
    %197 = llvm.getelementptr %187[%196] : (!llvm.ptr<f32>, i64) -> !llvm.ptr<f32>
    llvm.store %186, %197 : !llvm.ptr<f32>
    %198 = llvm.add %69, %68  : i64
    llvm.br ^bb1(%198 : i64)
  ^bb3:  // pred: ^bb1
    llvm.return
  }
  llvm.func @please_map_me() attributes {sym_visibility = "private"}
}

